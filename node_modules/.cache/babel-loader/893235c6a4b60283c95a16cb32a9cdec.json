{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\zero-web\\\\faceapp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Nav from './components/nav/nav';\nimport Logo from './components/logo/logo';\nimport Imageform from './components/imageform/imageform';\nimport Sighin from './components/Sighin/sighin';\nimport Register from './components/register/register';\nimport Rank from './components/Rank/rank';\nimport Clarifai from 'clarifai';\nimport Facepicture from './components/facepicture/facepicture';\nimport './App.css';\nconst particle = {\n  particles: {\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5\n      }\n    }\n  }\n};\nconst initialstate = {\n  input: '',\n  regionsArray: [],\n  imageUrl: '',\n  box: [],\n  route: 'sighin',\n  issighin: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.facelocation = data => {\n      // const clariface = data.outputs[0].data.regions[0].region_info.bounding_box\n      const clariface = data.outputs[0].data.regions;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      const boxes = clariface.map(regions => {\n        const localtion = regions.region_info.bounding_box;\n        return {\n          leftCol: localtion.left_col * width,\n          topRow: localtion.top_row * height,\n          rightCol: width - localtion.right_col * width,\n          bottomRow: height - localtion.bottom_row * height\n        };\n      });\n      return boxes;\n    };\n\n    this.onroutechange = route => {\n      if (route === 'sighout') {\n        this.setState(initialstate);\n      } else if (route === 'home') {\n        this.setState({\n          issighin: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.displaybox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputchange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onsubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('http://localhost:3000/imageurl', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displaybox(this.facelocation(response));\n        console.log(response);\n      }).catch(err => console.log(err));\n    };\n\n    this.state = initialstate;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Nav, {\n      onroutechange: this.onroutechange,\n      issighin: this.state.issighin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Imageform, {\n      onInputchange: this.onInputchange,\n      onsubmit: this.onsubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Facepicture, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    })) : this.state.route === 'sighin' ? /*#__PURE__*/React.createElement(Sighin, {\n      loadUser: this.loadUser,\n      onroutechange: this.onroutechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 18\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onroutechange: this.onroutechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 18\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Desktop/zero-web/faceapp/src/App.js"],"names":["React","Component","Particles","Nav","Logo","Imageform","Sighin","Register","Rank","Clarifai","Facepicture","particle","particles","line_linked","shadow","enable","color","blur","initialstate","input","regionsArray","imageUrl","box","route","issighin","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","facelocation","clariface","outputs","regions","image","document","getElementById","width","Number","height","boxes","map","localtion","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","onroutechange","displaybox","onInputchange","event","target","value","onsubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","render"],"mappings":"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","sourcesContent":["import React ,{ Component } from 'react';\nimport Particles from 'react-particles-js'\nimport Nav from './components/nav/nav'  \nimport Logo from './components/logo/logo'\nimport Imageform from './components/imageform/imageform'\nimport Sighin from './components/Sighin/sighin' \nimport Register from './components/register/register'\nimport Rank from './components/Rank/rank'   \nimport Clarifai from 'clarifai';\nimport Facepicture from './components/facepicture/facepicture';\nimport './App.css';\n\n\n\nconst particle={\n                particles: {\n                  line_linked: {\n                    shadow: {\n                      enable: true,\n                      color: \"#3CA9D1\",\n                      blur: 5\n                    }\n                  }\n                }\n }\n\n const initialstate={\n    input:'',\n    regionsArray:[],\n    imageUrl:'',\n    box: [],\n    route:'sighin',\n    issighin:false,\n    user:{\n        id:'',\n        name:'',\n        email:'',\n        entries:0,\n        joined:''\n    }\n }\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialstate\n  }\n  loadUser =(data)=>{\n    this.setState({user:{\n        id:data.id,\n        name:data.name,\n        email:data.email,\n        entries:data.entries,\n        joined:data.joined\n    }})\n  }\n\n  facelocation = (data) =>{\n    // const clariface = data.outputs[0].data.regions[0].region_info.bounding_box\n    const clariface = data.outputs[0].data.regions\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const boxes = clariface.map(regions=>{\n     const localtion = regions.region_info.bounding_box\n      return {\n        leftCol:localtion.left_col * width,\n        topRow:localtion.top_row * height,\n        rightCol:width-(localtion.right_col*width),\n        bottomRow:height-(localtion.bottom_row*height)\n    }\n    })\n    return boxes\n  }\n\n  onroutechange = (route) =>{\n    if(route === 'sighout'){\n      this.setState(initialstate)\n    } else if(route === 'home'){\n      this.setState({issighin:true})\n    }\n    this.setState({route:route})\n  }\n\n  displaybox = (box) =>{\n    this.setState({box:box})\n  }\n  onInputchange = (event) =>{\n     this.setState({input:event.target.value});\n  }\n  onsubmit = () =>{\n      this.setState({imageUrl:this.state.input});\n     fetch('http://localhost:3000/imageurl',{\n            method:'put',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify({\n            input:this.state.input\n            })\n          })\n      .then(response=>response.json())\n      .then(response=>{\n        if(response){\n          fetch('http://localhost:3000/image',{\n            method:'put',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify({\n              id:this.state.user.id\n            })\n          })\n            .then(response=>response.json())\n            .then(count=>{\n              this.setState(Object.assign(this.state.user,{entries:count}))\n            })\n            .catch(console.log)\n        }\n        this.displaybox(this.facelocation(response))\n        console.log(response)\n        })\n      .catch(err=>console.log(err))\n }\n  render(){\n    return (\n      <div className=\"App\">\n            <Particles className='particles' params={particle} />\n            <Nav onroutechange={this.onroutechange} issighin={this.state.issighin}/>\n            {  this.state.route==='home'\n              ?<div> \n                  <Logo />\n                  <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n                  <Imageform onInputchange={this.onInputchange} onsubmit={this.onsubmit}/>\n                  <Facepicture box={this.state.box} imageUrl={this.state.imageUrl}/>\n                </div>  \n             :(\n                this.state.route ==='sighin'\n                ?<Sighin loadUser={ this.loadUser} onroutechange={this.onroutechange}/>\n                :<Register loadUser={ this.loadUser} onroutechange={this.onroutechange}/>\n              )\n            }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}